/*You are given an array of n integers. Your task is to find the maximum value of Σarr[i]*i, where i = 0, 1, 2,…, n – 1 (i is the index of the array). The elements of the array can be rearranged to give the maximum value of Σarr[i]*i, where i = 0, 1, 2,…, n – 1.

 

For example, suppose the given array is {3, 5, 6, 1}. If the elements of this array are rearranged as {1, 3, 5, 6}, then the sum of arr[i]*i is maximum, and it can be calculated as 1*0 + 3*1 + 5*2 + 6*3 = 31.*/

import java.util.*;
 
public class Source
{
    //Function to find the maximum sum of arr[i]*i
    static int maxSum(int arr[], int n)
    {
        //Write code here
        int res = 0;
        Arrays.sort(arr);
        for(int i = 0;i<n;i++){
            res = res+arr[i]*i;
        }
        return res;
    }
    
    public static void main(String args[])
    {
        int n;
        Scanner s = new Scanner(System.in);
        n = s.nextInt();
        int arr[] = new int[n];
        for(int i = 0; i < n; i++)
            arr[i] = s.nextInt();
 
        System.out.println(maxSum(arr, n) + "\n" );
    }
}
